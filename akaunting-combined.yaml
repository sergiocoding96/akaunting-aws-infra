AWSTemplateFormatVersion: '2010-09-09'
Description: 'Akaunting deployment (Free Tier)'

Mappings:
  RegionMap:
    us-east-1:
      AMI: ami-0261755bbcb8c4a84
    us-west-2:
      AMI: ami-0c65adc9a5c1b5d7c
    eu-west-1:
      AMI: ami-0694d931cee176e7d
    eu-central-1:
      AMI: ami-0f61af304b14f15fb

Parameters:
  DBPassword:
    Type: String
    Description: Database admin password
    NoEcho: true
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, staging, prod]
    Description: Environment type

Resources:
  # VPC Resources
  AkauntingVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: akaunting-vpc
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: Akaunting

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref AkauntingVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: akaunting-public-subnet
        - Key: Environment
          Value: !Ref Environment

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref AkauntingVPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: akaunting-private-subnet-1
        - Key: Environment
          Value: !Ref Environment

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref AkauntingVPC
      CidrBlock: 10.0.3.0/24
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: akaunting-private-subnet-2
        - Key: Environment
          Value: !Ref Environment

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: akaunting-igw
        - Key: Environment
          Value: !Ref Environment

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref AkauntingVPC
      InternetGatewayId: !Ref InternetGateway

  NatGatewayEIP:
    Type: AWS::EC2::EIP
    DependsOn: AttachGateway
    Properties:
      Domain: vpc

  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEIP.AllocationId
      SubnetId: !Ref PublicSubnet
      Tags:
        - Key: Name
          Value: akaunting-nat
        - Key: Environment
          Value: !Ref Environment

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref AkauntingVPC
      Tags:
        - Key: Name
          Value: akaunting-public-rt
        - Key: Environment
          Value: !Ref Environment

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref AkauntingVPC
      Tags:
        - Key: Name
          Value: akaunting-private-rt
        - Key: Environment
          Value: !Ref Environment

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable

  # IAM Role for EC2
  EC2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Tags:
        - Key: Environment
          Value: !Ref Environment

  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref EC2Role

  # Security Groups
  WebSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Akaunting EC2 instance
      VpcId: !Ref AkauntingVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: akaunting-web-sg
        - Key: Environment
          Value: !Ref Environment

  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for RDS instance
      VpcId: !Ref AkauntingVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref WebSecurityGroup
      Tags:
        - Key: Name
          Value: akaunting-db-sg
        - Key: Environment
          Value: !Ref Environment

  # EC2 Instance
  WebServer:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', AMI]
      SubnetId: !Ref PublicSubnet
      SecurityGroupIds:
        - !Ref WebSecurityGroup
      IamInstanceProfile: !Ref EC2InstanceProfile
      Tags:
        - Key: Name
          Value: akaunting-server
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: Akaunting
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          # Enable logging
          exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
          
          # Update system
          yum update -y
          
          # Install required packages
          yum install -y httpd php php-mysqlnd php-json php-gd php-mbstring php-xml php-zip unzip wget
          
          # Start and enable Apache
          systemctl start httpd
          systemctl enable httpd
          
          # Download and install Akaunting
          cd /var/www/html
          wget https://akaunting.com/download.php?version=latest -O akaunting.zip
          unzip akaunting.zip
          chown -R apache:apache /var/www/html
          chmod -R 755 /var/www/html
          
          # Create installation complete marker
          echo "Akaunting installation completed" > /var/www/html/install_complete.html

  # RDS Database
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for Akaunting RDS
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      Tags:
        - Key: Environment
          Value: !Ref Environment

  Database:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: akaunting
      Engine: mysql
      EngineVersion: 8.0.33
      MasterUsername: akaunting
      MasterUserPassword: !Ref DBPassword
      DBInstanceClass: db.t2.micro
      AllocatedStorage: 20
      VPCSecurityGroups:
        - !GetAtt DBSecurityGroup.GroupId
      DBSubnetGroupName: !Ref DBSubnetGroup
      PubliclyAccessible: false
      BackupRetentionPeriod: 7
      MultiAZ: false
      Tags:
        - Key: Name
          Value: akaunting-db
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: Akaunting

  # Elastic IP
  WebServerEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      InstanceId: !Ref WebServer
      Tags:
        - Key: Name
          Value: akaunting-eip
        - Key: Environment
          Value: !Ref Environment

Outputs:
  WebsiteURL:
    Description: Public URL of the Akaunting installation
    Value: !Sub http://${WebServerEIP}

  DBEndpoint:
    Description: Database endpoint for configuration
    Value: !GetAtt Database.Endpoint.Address

  DBPort:
    Description: Database port
    Value: !GetAtt Database.Endpoint.Port